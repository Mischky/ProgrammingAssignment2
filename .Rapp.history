library(swirl)
swirl()
Sys.Date()
x <- c(2, 4, 5)
mean(c(2,4,5))
boring_function <- function(x) {#
  x#
}
submit(boring_function)
boring_function
boring_function(3)
submit(boring_function)
boring_function()
submit(boring_function)
?submit
boring_function('My first function!')
boring_function()
boring_function
submit(my_mean)
submit()
my_mean(c(4,5,10))
submit()
submit(remainder)
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd(), c(1.4, 3.6,7.9, 8.8))
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x}, c(8,4,0))
evaluate(function(x){x+1}, c(8,4,0))
info()
skip()
evaluate(function(x){x[[3]]}, c(8, 4, 0))
evaluate(function(x){x[3]}, c(8, 4, 0))
lenth(function(x))
length(function(x))
length(evaluate)
skip()
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Hola", "Michelle")
submit()
mad_libs(place="huatulco", adjective="hungry", noun="chipotle")
submit()
"I love"%p%R1"
'I love %p% R!'
skip()
j
library(swirl)
swirl()
'I love %p% R!'
'I %p% love %p% R! %p%'
skip()
pollutantmean <- function(directory, pollutant, id=1:332){}
pollutantmean <-function(directory, pollutant, id=1:332){sum(x)/length(x)})
pollutantmean <-function(directory, pollutant, id=1:332){sum(x)/length(x)}
pollutantmean("specdata", "sulfate", 1:10)
specdata
pollutantmean("specdata", "nitrate", 70:72)
f <- function(x) {#
        g <- function(y) {#
                y + z#
        }#
        z <- 4#
        x + g(x)#
}
x <- 10
f <- function(x) {#
+         g <- function(y) {#
+                 y + z#
+         }#
+         z <- 4#
+         x + g(x)#
+ }
z <- 10
f(3)
f <- function(x){g <-function(y){y+z} z <-4}
f <- function(x){g <-function(y){y+z} z <- 4}
f <- function(x){g <-function(y){y+z} z <- 4 x+g(x)}
f <- function(x) {g <- function(y) {#
                y + z#
        }#
        z <- 4#
        x + g(x)#
}
z <- 10
f(3)
multmerge = function(mypath){#
filenames=list.files(path=mypath, full.names=TRUE)#
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})#
Reduce(function(x,y) {merge(x,y)}, datalist)}
mymergeddata = multmerge("/Users/michelleturski/Desktop/specdata")
library(swirl)
ls()
rm(list=ls())
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- (flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
mean(iris$Sepal.Length)
colMeans(iris)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
mtcars[,cyl]
mtcars[,$cyl]
cylinders <- mtcards[, 2]
cylinders <- mtcars[, 2]
cylinders
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429 -82.63636
debug(ls)
ls()
clear
n
?iris
species <- iris[, 5]
species
sapply(species, mean)
tapply(iris$Species, flags$Sepal.Length, mean)
sapply(split(iris$Sepal.Length, mtcars$Species), mean)
lapply(split(iris$Sepal.Length, mtcars$Species), mean)
summary(iris)
virginica <- iris[101:150, ]
mean(virginica)
class(iris)
s <- split(iris, iris$Species)
lapply <- (s, mean)
lapply(s, mean)
lapply(s, function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width")]))
?solve
library(swirl)
ls()
rm(list=ls())
swirl()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample (1:6, 4, replace=TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, prob=c(0.3, 0.7))
flips <- sample(c(0,1), 100, prob=c(0.3, 0.7), replace=TRUE)
flips
sum(1)
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips <-rbinom(c(0,1), 100, c(0.3, 0.7))
flips <- rbinom(100, 1, 0.7)
flips <-rbinom(c(0,1), 1, c(0.3, 0.7))
info()
skip()
flips
flips2
sum(flips)
sume(flips2)
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean=100, sd=25)
rpois(5, mean=10)
?rpois
rpois(5, lambda=10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x= cars$speed, y = cars$dist, xlab="Speed"
)
plot(x= cars$speed, y = cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x= cars$speed, y = cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
?par
plot(cars, col =2)
plot(cars, xlim=c(10, 15))
plot(cars, pch=2)
data(mtcars)
play()
summary(mtcars)
str(mtcars)
nxt()
?boxplot
boxplot(formulat= mpg~cyl, data=mtcars)
boxplot(formula= mpg~cyl, data=mtcars)
hist(mtcars$mpg)
$ git add .
$ git add.
$ git init
getwd()
ls()
